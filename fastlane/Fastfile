# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform :ios
platform :ios do
# Variables #

    plistFile = 'SampleCIAndCD/Info.plist'
    target = 'SampleCIAndCD'

    export_plist = "./ExportOptions.plist"

    # Auxiliary Variables #

    ipa_folder = "" # to be filled by lanes
    ipa_path = "" # to be filler by lanes
    build_number = "1.0"
    version_number = "1.0"

    # Auxiliary Lanes #

    before_all do
        version_number = get_info_plist_value(
            path: plistFile,
            key: 'CFBundleShortVersionString',
        )
    end

    lane :export_ipa do
        build_number = get_info_plist_value(
            path: plistFile,
            key: 'CFBundleVersion',
        )

        ipa_folder = "#{ENV['XCS_DERIVED_DATA_DIR']}/deploy/#{version_number}.#{build_number}/"
        ipa_path = "#{ipa_folder}#{target}.ipa"
        sh "mkdir -p #{ipa_folder}"

        # Export the IPA from the archive file created by the bot

        sh "xcrun xcodebuild -exportArchive -archivePath \"#{ENV['XCS_ARCHIVE']}\" -exportPath \"#{ipa_folder}\" -IDEPostProgressNotifications=YES -DVTAllowServerCertificates=YES -DVTSigningCertificateSourceLogLevel=3 -DVTSigningCertificateManagerLogLevel=3 -DTDKProvisioningProfileExtraSearchPaths=/Library/Developer/XcodeServer/ProvisioningProfiles -exportOptionsPlist '#{export_plist}'"
    end

# End Others #

# After #

        lane :after_integration_sandbox do
            build_number = get_info_plist_value(
                path: plistFile,
                key: 'CFBundleVersion',
            )
            begin
                vtag = "sandbox.v#{version_number}.#{build_number}"
                add_git_tag(
                tag: vtag
                )
                push_git_tags
                rescue Exception
            end
        end

        lane :after_integration_testflight do
            export_ipa
            begin

            hockey(
            # To get your API token, open API Tokens in Account Settings of Hockey. From there, you can find your existing API token, or create a new one.
            api_token: '805bc46b0c9a4ca79fd1f8b1e6145df7',
            ipa: ENV["XCS_PRODUCT"],
            notes: ENV["XCS_PRIMARY_REPO_DIR"] + "/ReleaseNotes.txt",
            notify: "1",
            # public_identifier: ENV['HOCKEY_BETA_APP_ID'],
            public_identifier: ENV['8c508c5d20904ffaad19f36f49affa4f'],
            )

            rescue Exception
            end

            build_number = get_info_plist_value(
            path: plistFile,
            key: 'CFBundleVersion',
            )

            begin
            vtag = "store.v#{version_number}.#{build_number}"
            add_git_tag(
                tag: vtag
            )
            push_git_tags
            rescue Exception
        end

end
# End After #
end
